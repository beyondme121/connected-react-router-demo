{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/utils.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/observer/watcher.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/extend.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["// 拿到Array的原型对象\r\nlet oldArrayProtoMethods = Array.prototype\r\n\r\n// 根据Array的原型创建对象\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\n// 需要重写数组的方法(可以改变数组的方法)\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'reverse',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  // 重新定义数组的方法, 重写上面的7个方法\r\n  arrayMethods[method] = function (...args) {\r\n\r\n    // console.log(args)\r\n    // 切面编程: 做点特殊的事情之后, 再调用原本执行的方法\r\n    // console.log('数组方法重写了，更新视图')\r\n    // 原本的方法执行\r\n    const result = oldArrayProtoMethods[method].apply(this, arguments)\r\n    let inserted;\r\n    let ob = this.__ob__    // 通过属性的__ob__属性可以拿到Observer实例, 通过实例可以拿到实例方法\r\n    // 监控新增对象\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':   // 这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\r\n        inserted = args\r\n        break;\r\n      case 'splice':\r\n        inserted = args.slice(2)  // arr.splice(0, 1, {a: 100}) // 数组下标0的位置 删除1个, 并用对象{a: 100}填补这个位置 => 新增\r\n      default:\r\n        break;\r\n    }\r\n    // 将观测对象的方法, 挂载到实例的属性__ob__上\r\n    // if (inserted) ob.observeArray(inserted)\r\n    if (inserted) {\r\n      ob.observeArray(inserted)\r\n    }\r\n    // 通过observer实例获取dep\r\n    ob.dep.notify()  // 通知数组更新\r\n    return result\r\n  }\r\n})","export function proxy(vm, data, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[data][key]\r\n    },\r\n    set(newValue) {\r\n      vm[data][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\n// 对目标对象定义属性, 属性是不可枚举的\r\nexport function definePropertyWithoutEnumerable(target, key, value) {\r\n  Object.defineProperty(target, key, {\r\n    enumerable: false,\r\n    configurable: false,\r\n    value\r\n  })\r\n}\r\n\r\n\r\nexport const LIFECYCLE_HOOKS = [\r\n  'beforeCreate',\r\n  'created',\r\n  'beforeMount',\r\n  'mounted',\r\n  'beforeUpdate',\r\n  'updated',\r\n  'beforeDestroy',\r\n  'destroyed'\r\n]\r\nconst strategy = {}\r\n\r\n// 状态state合并 TODO\r\n// 合并data, 不能这样简单的取儿子的属性值\r\n// strategy.data = function (parentVal, childValue) {\r\n//   return childValue\r\n// }\r\n// strategy.computed = function () {\r\n\r\n// }\r\n// strategy.watch = function () {\r\n\r\n// }\r\n\r\nstrategy.components = function (parentVal, childVal) {\r\n  // res可以通过__proto__ 查找到父亲的值, 父组件的选项\r\n  const res = Object.create(parentVal)\r\n  // 如果有子组件, 就把子组件的所有属性都定义在res上,儿子上没有属性，就通过__proto__向上查找,相当于继承了\r\n  if (childVal) {\r\n    for (let key in childVal) {\r\n      res[key] = childVal[key]\r\n    }\r\n  }\r\n  return res\r\n}\r\n\r\n\r\n\r\nfunction mergeHook(parentVal, childVal) {\r\n  if (childVal) {\r\n    if (parentVal) {\r\n      return parentVal.concat(childVal)   // 父子拼接, 多个mixin配置中, 多次出现created, 那么把多个方法放进去\r\n    } else {\r\n      return [childVal]\r\n    }\r\n  } else {\r\n    return parentVal\r\n  }\r\n}\r\nLIFECYCLE_HOOKS.forEach(hook => strategy[hook] = mergeHook)\r\n\r\n// 合并选项 parent: Vue.options={}, child: mixin = { created: fn }\r\nexport function mergeOptions(parent, child) {\r\n  const options = {}\r\n  for (let key in parent) {\r\n    mergeField(key)\r\n  }\r\n\r\n  // 儿子有,父亲没有, 把儿子多的属性合并到父亲上\r\n  for (let key in child) {\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n\r\n  // 合并生命周期的钩子hook, 如created\r\n  // function mergeField(key) {\r\n  //   if (strategy[key]) {\r\n  //     options[key] = strategy[key](parent[key], child[key])\r\n  //   } else {\r\n  //     options[key] = child[key]\r\n  //   }\r\n  // }\r\n\r\n  function mergeField(key) { // 合并字段\r\n    // 根据key 不同的策略来进行合并 \r\n    if (strategy[key]) {\r\n      options[key] = strategy[key](parent[key], child[key]);\r\n    } else {\r\n      // todo默认合并\r\n      if (child[key]) {\r\n        options[key] = child[key]\r\n      } else {\r\n        options[key] = parent[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return options\r\n}\r\n\r\n\r\nlet callbacks = []\r\nlet pending = false\r\nlet timerFunc;\r\n\r\n\r\nfunction flushCallbacks() {\r\n  while (callbacks.length) {\r\n    let cb = callbacks.shift()\r\n    cb()\r\n  }\r\n  pending = false\r\n}\r\n\r\nif (Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flushCallbacks)\r\n  }\r\n} else if (MutationObserver) {\r\n  let observe = new MutationObserver(flushCallbacks)\r\n  let textNode = document.createTextNode(1)\r\n  observe.observe(textNode, { characterData: true })\r\n  timerFunc = () => {\r\n    textNode.textContent = 2;\r\n  }\r\n} else if (setImmediate) {\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks)\r\n  }\r\n} else {\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks)\r\n  }\r\n}\r\n\r\n\r\n\r\n// watcher.js: queueWatcher中调用\r\n// 参数cb: 传入一个刷新watcher队列的函数\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb)\r\n  if (!pending) {\r\n    timerFunc()\r\n    pending = true\r\n  }\r\n}\r\n\r\n\r\nfunction makeMap(str) {\r\n  const mapping = {}\r\n  const list = str.split(',')\r\n  for (let i = 0; i < list.length; i++) {\r\n    mapping[list[i]] = true\r\n  }\r\n  return key => {\r\n    return mapping[key]\r\n  }\r\n}\r\n\r\n// 判断标签名是否为原生标签\r\nexport const isReservedTag = makeMap('a,div,img,image,text,span,p,button,input,textarea,ul,li')","let id = 0\r\nclass Dep {\r\n  constructor() {\r\n    this.subs = []\r\n    this.id = id++\r\n  }\r\n\r\n  depend() {\r\n    // this.subs.push(Dep.target)\r\n    Dep.target.addDep(this)\r\n  }\r\n  // 给dep上添加watcher\r\n  addSub(watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  // 数据变更, 让所有的watcher调用自己的update方法, watcher敞开方法供dep调用\r\n  notify() {\r\n    this.subs.forEach(watcher => watcher.update())\r\n  }\r\n}\r\n\r\n\r\nlet stack = []\r\n// 属性依赖dep 要记住 在哪个watcher中使用了，也就是属性在哪个组件中\r\nexport function pushTarget(watcher) {\r\n  Dep.target = watcher\r\n  stack.push(watcher)\r\n}\r\n\r\nexport function popTarget() {\r\n  // Dep.target = null\r\n  stack.pop()\r\n  // 如果栈中有多个watcher 出栈后Dep.target  要指向数组中的最后一个watcher, \r\n  Dep.target = stack[stack.length - 1]\r\n  console.log(\"stack: \", stack)\r\n}\r\n\r\n\r\nexport default Dep","import { arrayMethods } from \"./array\"\r\nimport { definePropertyWithoutEnumerable } from \"../utils\"\r\nimport Dep from \"./dep\"\r\n\r\n\r\nclass Observer {\r\n  constructor(value) {\r\n    // 记住最外层的对象\r\n    this.dep = new Dep()   // value ={}  value = [], 从data(){ return { obj, arr }} return返回的对象进行监控 其中可能是对象,也可能是数组\r\n\r\n    definePropertyWithoutEnumerable(value, '__ob__', this)  // this: Observer实例\r\n    // value.__ob__ = this\r\n\r\n    // 如果是数组, 不观测每一项\r\n    if (Array.isArray(value)) {\r\n      // value如果是数组, 继承指向重新的数组方法，通过原型链继承\r\n      value.__proto__ = arrayMethods\r\n      this.observeArray(value)\r\n    } else {\r\n      this.walk(value)\r\n    }\r\n  }\r\n\r\n  // 观测数组中的每一项, 如果是对象就进行观测\r\n  observeArray(value) {\r\n    value.forEach(item => {\r\n      // 观测数组中的对象类型\r\n      observe(item)\r\n    })\r\n  }\r\n\r\n  walk(data) {\r\n    let keys = Object.keys(data)\r\n    keys.forEach(key => {\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n}\r\n\r\n// 给每个属性添加响应式 增加dep以及watcher的处理\r\nfunction defineReactive(data, key, value) {\r\n  // 递归观察data嵌套的对象\r\n  let childDep = observe(value)  // 获取到数组对应的dep\r\n\r\n  // observe(value)\r\n\r\n  // 每个属性一个dep\r\n  let dep = new Dep()\r\n\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      if (Dep.target) {\r\n        dep.depend()\r\n        if (childDep) {\r\n          childDep.dep.depend()\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if (newValue === value) return\r\n      console.log('数据设置了')\r\n      // 如果给data属性设置一个对象,设置的对象也需要进行观测\r\n      observe(newValue)\r\n      value = newValue\r\n\r\n      // 数据变更, 通知dep中的所有watcher调用自己的更新\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\n\r\n// 观测数据的变化, 更新视图\r\nexport function observe(data) {\r\n  if (data.__ob__) {\r\n    return data\r\n  }\r\n  // 只观测对象或数组\r\n  if (typeof data !== 'object' || data == null) {\r\n    return\r\n  }\r\n  // 使用类的方式: 1. 可以清楚的知道这个属性是哪个类的实例 2. 观测数据的功能是高内聚的\r\n  return new Observer(data)\r\n}","import { pushTarget, popTarget } from \"./dep\"\r\nimport { nextTick } from \"../utils\"\r\n\r\nlet id = 0\r\nclass Watcher {\r\n  /**\r\n   * @param {*} vm \r\n   * @param {*} exprOrFn: 可能是表达式 Vue.$set这种更新数据; 也可能是函数, 直接调用update(render)\r\n   * @param {*} updateCallback: 更新后的callback\r\n   * @param {*} options: 包含了是否为渲染watcher\r\n   */\r\n  constructor(vm, exprOrFn, updateCallback, options) {\r\n    this.vm = vm\r\n    this.exprOrFn = exprOrFn\r\n    this.updateCallback = updateCallback\r\n    this.options = options\r\n    // 如果用户定义的watch属性或者直接调用vm.$watch(expr, cb)\r\n    this.user = options.user\r\n    // computed属性\r\n    this.lazy = options.lazy; // 如果watcher上有lazy属性 说明是一个就算属性\r\n    this.dirty = this.lazy; // dirty代表取值时是否执行用户提供的方法\r\n\r\n    this.deps = []\r\n    this.depsId = new Set()\r\n    this.id = id++\r\n    // watcher内部组件渲染或者更新都是render函数\r\n    if (typeof exprOrFn === 'function') {\r\n      this.getter = exprOrFn\r\n    } else {\r\n      // 用户自定义的watcher, 如watch: {a: fn}, vm.$watch(exprOrFn,handler,options) 中,exprOrFn通常是字符串(属性key值)\r\n      this.getter = function () {\r\n        let obj = vm\r\n        let path = exprOrFn.split('.')\r\n        for (let i = 0; i < path.length; i++) {\r\n          obj = obj[path[i]]\r\n        }\r\n        return obj\r\n      }\r\n    }\r\n    // 渲染watcher和watch中的watch默认都是会执行一次的, 当时computed的watcher是默认不执行的\r\n    this.value = this.lazy ? void 0 : this.get()\r\n    // this.value = this.get()\r\n  }\r\n\r\n  // watcher记录dep，去重\r\n  addDep(dep) {\r\n    // this.deps.push(dep)\r\n    let id = dep.id\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this)\r\n    }\r\n  }\r\n\r\n  get() {\r\n    pushTarget(this)    // 把watcher实例给到Dep类去折腾. 在Dep.target = this\r\n    // 渲染页面(1. 代码生成render 2. 生成DOM,挂载页面)\r\n    let result = this.getter.call(this.vm)\r\n    popTarget()\r\n    return result\r\n  }\r\n\r\n  update() {\r\n    if (this.lazy) {\r\n      this.dirty = true // 设置为true表示需要更新\r\n    } else {\r\n      // this.get()\r\n      queueWatcher(this)\r\n    }\r\n  }\r\n\r\n  // 执行每个watcher\r\n  run() {\r\n    let oldValue = this.value\r\n    let newValue = this.get()\r\n    this.value = newValue\r\n    if (this.user) {\r\n      this.updateCallback.call(this.vm, newValue, oldValue)\r\n    }\r\n  }\r\n\r\n  // 计算属性取值\r\n  evaluate() {\r\n    // 调用get, get方法有返回值result,取值当然有返回值\r\n    this.value = this.get()\r\n    this.dirty = false    // 取了一次值, 就不是dirty的了\r\n  }\r\n\r\n  depend() {\r\n    // 拿出当前watcher的所有依赖项\r\n    let i = this.deps.length;\r\n    while (i--) {\r\n      // 让每一个dep记录当前的渲染watcher\r\n      this.deps[i].depend()\r\n    }\r\n  }\r\n}\r\n\r\n// 将需要批量更新的watcher存到一个队列中，稍后让watcher执行，存储watcher队列如果是同一个就不再存储了\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false\r\n\r\n// 刷新当前调度的队列，提出一层，然后queueWatcher中就不要写定时器了\r\nfunction flushSchedulerQueue() {\r\n  // 执行watcher队列 去重后的watcher队列\r\n  queue.forEach(watcher => {\r\n    watcher.run()\r\n    // 如果不是用户watcher, 即如果是渲染watcher, 就执行cb\r\n    if (!watcher.user) {\r\n      console.log(\"render watcher cb:\", watcher.cb)\r\n      watcher.updateCallback()\r\n    } else {\r\n      console.log(\"user watcher.cb:\", watcher.cb)\r\n    }\r\n  })\r\n  // 执行完之后清空队列 准备下一次watcher队列的更新\r\n  queue = []\r\n  has = {}\r\n  pending = false\r\n}\r\n\r\n\r\n\r\n// 更新队列\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id\r\n  if (!has[id]) {\r\n    queue.push(watcher)\r\n    has[id] = true\r\n    if (!pending) {\r\n      // setTimeout(() => {\r\n      //   queue.forEach(watcher => watcher.run())  // 清空队列\r\n      //   queue = []\r\n      //   has = {}\r\n      //   pending = false\r\n      // }, 0);\r\n      nextTick(flushSchedulerQueue)\r\n      pending = true\r\n    }\r\n  }\r\n}\r\n\r\nexport default Watcher","import { observe } from \"./observer/index.js\"\r\nimport { proxy, nextTick } from \"./utils.js\"\r\nimport Watcher from \"./observer/watcher.js\"\r\nimport Dep from \"./observer/dep.js\"\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  // 根据不同的选项, 做不同的拆分处理, data如何处理, props如何处理等\r\n  if (opts.props) {\r\n    initProps(vm)\r\n  }\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n}\r\n\r\n// data数据的初始化操作, 数据劫持\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  // data可能是函数, 也可能是对象, 函数就直接执行,结果返回对象,赋值给vm也是为了可以通过vue实例获取到数据劫持后的数据(引用)\r\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  // 当我去vm上取属性时 ，帮我将属性的取值代理到vm._data上\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n  observe(data)\r\n}\r\n\r\nfunction initProps() { }\r\n\r\n// watch属性对象的作用就是数据属性变化了，执行watch监控的对应方法或者数组方法\r\nfunction initWatch(vm) {\r\n  let watches = vm.$options.watch\r\n  for (let key in watches) {\r\n    const handler = watches[key]\r\n    if (Array.isArray(handler)) {\r\n      handler.forEach(handle => createWatcher(vm, key, handle))\r\n    } else {\r\n      createWatcher(vm, key, handler)\r\n    }\r\n  }\r\n}\r\n\r\n// 大部分情况下exprOrFn是watch中监控的属性名, 字符串, cb可能是函数，对象，字符串\r\nfunction createWatcher(vm, exprOrFn, handler, options) {\r\n  // console.log(exprOrFn, cb, options)\r\n  if (typeof handler === 'object') {       // a: { handler () {...,deep, immediate: true, ...}}\r\n    options = handler     // 把整个对象的配置都给options\r\n    handler = handler.handler // 把执行的函数拿出来\r\n  }\r\n  if (typeof handler === 'string') {\r\n    handler = vm[handler]   // method中的方法\r\n  }\r\n  // 其他都是key:fn\r\n  // return new Watcher(vm, exprOrFn, handler, options)\r\n  return vm.$watch(exprOrFn, handler, options)\r\n}\r\n\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed\r\n  const watchers = vm._computedWatchers = {}\r\n  // debugger\r\n  // 因为依赖的属性变更，计算属性要重新执行, 有依赖收集的功能, 内部实现了watcher，所以要重写computed的每一个属性,\r\n  // 并且将属性改在到vm实例上，可以让组件通过this.计算属性获的形式 获取到这个值\r\n  for (let key in computed) {\r\n    const userDef = computed[key]     // 两种计算属性的写法 1. 函数 2. 对象\r\n    // 获取get方法, 用于传递给watcher的 get属性, 即属性发生变更执行的函数\r\n    const getter = typeof userDef == 'function' ? userDef : userDef.get;\r\n    // 给每个计算属性增加一个watcher,保存的vm实例变量_computedWatchers上, watcers['fullName'] = watcher\r\n    // 并且标识一下当前的watcher的类型是计算属性，是lazy的\r\n    watchers[key] = new Watcher(vm, getter, () => { }, { lazy: true })\r\n    defineComputed(vm, key, userDef)\r\n  }\r\n}\r\n\r\n\r\n\r\n// 这里没有写vm而是target表示的是: 可能是给Vue的实例挂属性, 也可能给组件实例挂属性\r\n// 入参:userDef 可能是函数 或者是对象;如果是函数,处理成对象的形式. 定义sharedComputedProperty为对象,给对象增加get,set属性\r\nfunction defineComputed(target, key, userDef) {\r\n  const sharedComputedProperty = {}\r\n  if (typeof userDef == 'function') {\r\n    sharedComputedProperty.get = createComputedGetter(key)      // 调用get,就是执行usefDef函数\r\n  } else {\r\n    sharedComputedProperty.get = createComputedGetter(key)\r\n    sharedComputedProperty.set = userDef.set\r\n  }\r\n  Object.defineProperty(target, key, sharedComputedProperty)\r\n}\r\n\r\n\r\n// 此方法是我们包装的方法，每次取值会调用此方法\r\nfunction createComputedGetter(key) {\r\n  // 取值时才会调用\r\n  return function () {\r\n    const watcher = this._computedWatchers[key] // 拿到这个属性对应的watcher\r\n    if (watcher) {\r\n      if (watcher.dirty) {    // 默认肯定是脏的，Watcher类初始化为true.\r\n        watcher.evaluate()    // 对当前watcher求值\r\n        // return watcher.value\r\n      }\r\n      // \r\n      if (Dep.target) { // 说明还有渲染watcher，也应该一并的收集起来\r\n        watcher.depend()\r\n      }\r\n      // 如果不是dirty的，说明是新的，赶紧的，直接返回\r\n      return watcher.value\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function stateMixin(Vue) {\r\n  // 用户自定义cb,默认调用util中的nextTick, 共用同调用同一个\r\n  Vue.prototype.$nextTick = function (cb) {\r\n    nextTick(cb)\r\n  }\r\n  Vue.prototype.$watch = function (exprOrFn, cb, options) {\r\n    let watcher = new Watcher(this, exprOrFn, cb, { ...options, user: true })\r\n    if (options.immediate) {\r\n      cb()\r\n    }\r\n  }\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名 ?:匹配不捕获\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nexport function parseHTML(html) {\r\n  // 解析开始标签 <div id=\"app\" name=\"xxx\">\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    // start[0] => \"<div\"\r\n    if (start) {\r\n      // 保存标签和属性\r\n      const match = {\r\n        tagName: start[1],      // start[1] ==> div\r\n        attrs: []\r\n      }\r\n      // 匹配完了就要删除\r\n      advance(start[0].length)   // 删除html开始标签 start[0] ==> <div\r\n\r\n      let end, attr\r\n      // 处理开始标签的属性 如果没有遇到结束标签的标识符\">\", 并且匹配到了属性, 就将匹配到的attr保存到match对象上, 最终return\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        match.attrs.push({\r\n          name: attr[1],      // id\r\n          value: attr[3] || attr[4] || attr[5]    // app\r\n        })\r\n        // 匹配完继续删除\r\n        advance(attr[0].length)\r\n      }\r\n      // 最终就剩下 \">\"\r\n      if (end) {\r\n        advance(end[0].length)\r\n        return match\r\n      }\r\n    }\r\n  }\r\n\r\n  function advance(n) {\r\n    html = html.substring(n)\r\n  }\r\n\r\n  let root;\r\n  let currentParent;    // 父节点\r\n  let stack = []        // 用于校验html标签书写是否规范, 标签是否配对, 开始标签存入栈中, 遇到结束标签 pop, \r\n\r\n  // 处理开始\r\n  function start(tagName, attrs) {\r\n    // console.log(tagName, attrs)\r\n    let element = createASTElement(tagName, attrs)\r\n    // 因为创建的是树tree,只能由一个根root\r\n    if (!root) {\r\n      root = element\r\n    }\r\n    currentParent = element   // 解析的当前节点作为 下一次解析文本的父级元素 例如 <div id=\"app\">hello</div>, <div id=\"app\">生成的 AST对象就是hello的父级currentParent\r\n    stack.push(element)\r\n    // console.log(\"stack: \", stack)\r\n  }\r\n\r\n  // 处理文本\r\n  function chars(text) {\r\n    // console.log(text)\r\n    // 文本可能是空文本\r\n    // text = text.replace(/\\s/g, '')\r\n    text = text.trim()\r\n    if (text) {\r\n      currentParent.children.push({\r\n        type: 3,\r\n        text\r\n      })\r\n    }\r\n  }\r\n\r\n  // 结束标签处理 </div>\r\n  // 1. 记录结束标签的父亲\r\n  // 2. 当前标签父亲的儿子是谁\r\n  // 3. 结束标签建立父子关系 \r\n  function end(tagName) {\r\n    // console.log(\"end....\", tagName)\r\n    let ele = stack.pop()   // 取出栈中的最后一个\r\n    // console.log(\"ele,\", ele)\r\n    // if (tagName === ele.tag) {\r\n    //   console.log('tagName,  ele.tagName', tagName, ele.tag)\r\n    // } else {\r\n    //   console.log('------> tagName,  ele.tagName', tagName, ele.tag)\r\n    // }\r\n    currentParent = stack[stack.length - 1]\r\n    if (currentParent) {\r\n      ele.parent = currentParent\r\n      currentParent.children.push(ele)\r\n    }\r\n  }\r\n\r\n  // 生成AST\r\n  function createASTElement(tagName, attrs) {\r\n    return {\r\n      tag: tagName, // 标签名\r\n      type: 1, // 元素类型\r\n      children: [], // 孩子列表\r\n      attrs, // 属性集合\r\n      parent: null // 父元素\r\n    }\r\n  }\r\n\r\n\r\n  while (html) {\r\n    // debugger\r\n    // 查找到 \"<\"\r\n    let textEnd = html.indexOf('<')\r\n    if (textEnd == 0) {   // 肯定是标签, 要么是<div> 开始标签, 要么是结束标签</div>\r\n      // 解析匹配开始标签\r\n      const startTagMatch = parseStartTag()\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)   // start函数内调用创建ast树的方法\r\n        // 继续处理(处理文本或者结束标签)\r\n        continue\r\n      }\r\n      // 匹配上 < 也可能是结束标签, 此处用html.match, 因为html已经在上面的parseStartTag中,如果匹配了就已经截取删除了\r\n      // 如果是结束标签, \r\n      const endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)      // <div>\r\n        end(endTagMatch[1])    // 将结束标签传入 \r\n        continue\r\n      }\r\n    }\r\n    // 如果是文本保存并\r\n    let text\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    // 截取删除\r\n    if (text) {\r\n      advance(text.length)\r\n      chars(text)     // 处理文本 hello {{name}}\r\n    }\r\n    // break;\r\n  }\r\n\r\n  return root;\r\n}","\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    const attr = attrs[i];\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach(_item => {\r\n        let [key, value] = _item.split(':')\r\n        obj[key] = value\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n  // _c(div, {id:\"app\",style:{\"color\":\"red\",\" fontSize\":\" 16px\"}})\r\n}\r\n\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return generate(node)   // 生产元素节点的字符串\r\n  } else {\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    }\r\n    let tokens = []\r\n    let lastIndex = defaultTagRE.lastIndex = 0\r\n    let match, index\r\n\r\n    while (match = defaultTagRE.exec(text)) {\r\n      index = match.index\r\n      if (index > lastIndex) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))   // 匹配开始的下表 截取匹配字符串的长度\r\n      }\r\n      // 匹配变量\r\n      tokens.push(`_s(${match[1].trim()})`)\r\n      lastIndex = index + match[0].length\r\n    }\r\n    // 如果是这种情况 hello {{name}} world {{age}} xxx, 需要把xxx加入到token中, 作为_v\r\n    if (lastIndex < text.length) {\r\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n    }\r\n    return `_v(${tokens.join('+')})`;\r\n  }\r\n}\r\n\r\nfunction genChildren(ast) {\r\n  const children = ast.children\r\n  if (children) {\r\n    return children.map(child => gen(child)).join(',')\r\n  }\r\n}\r\n\r\nexport function generate(ast) {\r\n  let children = genChildren(ast)  // 生成儿子\r\n  // `,${children}` 前面的, 要注意细节\r\n  let code = `_c('${ast.tag}', ${ast.attrs.length > 0 ? `${genProps(ast.attrs)}` : 'undefined'} ${children ? `,${children}` : ''})`\r\n  // console.log(\"code: \", code)\r\n  return code\r\n}","import { parseHTML } from \"./parse\";\r\nimport { generate } from \"./generate\";\r\n\r\nexport function compileToFunctions(template) {\r\n  // 将模板字符串解析成AST语法树\r\n  let ast = parseHTML(template)\r\n  // 静态代码优化\r\n  // 代码生成: 根据ast树生成render方法\r\n  let code = generate(ast)\r\n  let render = new Function(`with(this) { return ${code}}`)\r\n  // 将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\r\n  // let render = new Function(`with(this) { return ${code} }`)\r\n  return render\r\n}","// 返回值是真实DOM, 调用处lifecycle.js中 赋值给了vue实例的$el属性上，保存着DOM\r\nexport function patch(oldVNode, vnode) {\r\n  if (!oldVNode) {\r\n    return createElm(vnode)\r\n  }\r\n  // ------------------- 处理初渲染流程，直接用初始VDOM 替换掉 原始DOM节点(#app)\r\n  // 默认初始化时，时直接用虚拟节点创建出真实的DOM节点，替换掉老的DOM节点\r\n  if (oldVNode.nodeType === 1) { // html dom 固有的属性, =1 表示是元素\r\n    // debugger\r\n    let el = createElm(vnode)   // 产生真实的dom \r\n    let parentElement = oldVNode.parentNode;  // 获取老的app的父亲 =》 body\r\n    parentElement.insertBefore(el, oldVNode.nextSibling) // 当前的真实元素插入到app的后面\r\n    parentElement.removeChild(oldVNode) // 删除老的节点\r\n    return el // 把创建的DOM返回\r\n  } else {\r\n    // ------------------- 处理更新流程, 两个虚拟DOM的比较 -------------------\r\n    // 在更新时，拿老的虚拟节点 和 新的虚拟节点进行比较，将差异更新为真实的DOM\r\n\r\n    // 1. 比较标签\r\n    if (oldVNode.tag !== vnode.tag) {\r\n      return oldVNode.el.parentNode.replaceChild(createElm(vnode), oldVNode.el)\r\n    }\r\n\r\n    // 2. 比较文本(因为文本的tag是undefined, 走到这里说明新老tag是一样相等的)\r\n    // 标签一样，标签没有子元素，标签只有文本, 文本不同时的处理 <div>1</div>  <div>2</div>\r\n    if (!oldVNode.tag) {\r\n      // 如果文本不一致, 用vnode的text属性值更新 老的虚拟DOM上的el属性所代表的老的DOM节点的文本内容\r\n      if (oldVNode.text !== vnode.text) {\r\n        return oldVNode.el.textContent = vnode.text\r\n      }\r\n    }\r\n\r\n    // 3. 对比属性: 标签相同, 复用老节点，然后 比较标签的属性\r\n    // 3.1 复用老节点，给新的虚拟node添加el属性\r\n    let el = vnode.el = oldVNode.el\r\n    // 3.2 比较属性并更新. 使用新的vnode作为参数, 原因是要把其作为整体传递过去, 要使用到最新的DOM节点的标签元素 el\r\n    updateProperties(vnode, oldVNode.data)\r\n\r\n    // 4. 对比儿子\r\n    let oldChildren = oldVNode.children || []   // 也是虚拟DOM\r\n    let newChildren = vnode.children || []\r\n\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n      // 更新儿子节点, 两个虚拟节点的儿子数组, dom元素\r\n      updateChildren(oldChildren, newChildren, el)\r\n    } else if (oldChildren.length > 0) { // 老的有儿子，新的没有儿子\r\n      el.innerHTML = ''\r\n    } else if (newChildren.length > 0) { // 新的有儿子，老的没有 => 创建并插入节点\r\n      for (let i = 0; i < newChildren.length; i++) {\r\n        // 浏览器有性能优化 不用自己在搞文档碎片了\r\n        el.appendChild(createElm(newChildren[i]))\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n// 比较两个vnode, 相同元素 + key\r\nfunction isSameVNode(oldVnode, newVnode) {\r\n  return (oldVnode.tag === newVnode.tag) && (oldVnode.key == newVnode.key)\r\n}\r\n\r\n// \r\nfunction updateChildren(oldChildren, newChildren, parent) {\r\n  // 老的vnode\r\n  let oldStartIndex = 0;\r\n  let oldStartVnode = oldChildren[0]\r\n  let oldEndIndex = oldChildren.length - 1\r\n  let oldEndVnode = oldChildren[oldEndIndex]\r\n\r\n  // 新的vnode\r\n  let newStartIndex = 0;\r\n  let newStartVnode = newChildren[0]\r\n  let newEndIndex = newChildren.length - 1\r\n  let newEndVnode = newChildren[newEndIndex]\r\n\r\n  // 生成key-index的映射表\r\n  function makeIndexByKey(children) {\r\n    let map = {}\r\n    children.forEach((child, index) => {\r\n      if (child.key) {\r\n        map[child.key] = index\r\n      }\r\n    })\r\n    return map\r\n  }\r\n  let map = makeIndexByKey(oldChildren)\r\n\r\n\r\n  // 遍历两个数组 包含着虚拟节点, 只要一个循环完, 就结束\r\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n    // 如果老的数组中的元素是null\r\n    if (oldStartVnode == null) {\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n    }\r\n    // 从头向尾 遍历比较\r\n    if (isSameVNode(oldStartVnode, newStartVnode)) {\r\n      // 如果tag相同, 更新属性, 指针向后移动一个\r\n      patch(oldStartVnode, newStartVnode)\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    } else if (isSameVNode(oldEndVnode, newEndVnode)) {\r\n      // 从头到尾对比失败, 就从后向前比较\r\n      patch(oldEndVnode, newEndVnode)\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    } else if (isSameVNode(oldStartVnode, newEndVnode)) {\r\n      // 3. 老的头元素 与 新的 尾部 比较\r\n      patch(oldStartVnode, newEndVnode)\r\n      parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n      oldStartVnode = oldChildren[++oldStartIndex]\r\n      newEndVnode = newChildren[--newEndIndex]\r\n    } else if (isSameVNode(oldEndVnode, newStartVnode)) {\r\n      // 4. 老的尾 和 新的头\r\n      patch(oldEndVnode, newStartVnode)\r\n      parent.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n      oldEndVnode = oldChildren[--oldEndIndex]\r\n      newStartVnode = newChildren[++newStartIndex]\r\n    } else {\r\n      // 儿子之间没有关系, 用新的数组去查找映射关系\r\n      // 1. 从新的数组中一个个查找, 找到新数组中的元素在老的数组中的索引位置\r\n      let findIndex = map[newStartVnode.key]\r\n      // 2. 如果没有找到, 就是新增的, 插入到老的开始节点的前面\r\n      if (findIndex == undefined) {\r\n        parent.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n      } else {\r\n        let findVNode = oldChildren[findIndex]    // 通过mapping的索引，找到老的虚拟节点的元素\r\n        patch(findVNode, newStartVnode) // 比较老的和新的VDOM的属性和儿子   递归\r\n        parent.insertBefore(findVNode.el, oldStartVnode.el) // 将查找并更新后的节点 findVNode DOM节点el 插入到老数组的开始指针索引的前面\r\n        oldChildren[findIndex] = null   // 设置根据索引查找的移动的节点 为null, 避免数组塌陷\r\n      }\r\n      newStartVnode = newChildren[++newStartIndex]    // 新数组指针向后移动,并更新数组的开始节点 newStartVnode\r\n    }\r\n  }\r\n\r\n  // 处理比较完成后有多余的\r\n\r\n  // 如果新的多于老的, 并且在最后多的\r\n  if (newStartIndex <= newEndIndex) {\r\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n      parent.appendChild(createElm(newChildren[newStartIndex]))\r\n    }\r\n  }\r\n\r\n  // 如果老的数组还没有遍历完成, 老节点是不需要的节点,\r\n  if (oldStartIndex <= oldEndIndex) {\r\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n      let child = oldChildren[i]\r\n      if (child != null) {\r\n        parent.removeChild(child.el)\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n// 接收的虚拟节点, 在vdom/index.js中 createComponent返回的vnode函数返回的结果 {tag, data, key, ...,componentOptions}\r\nfunction createComponent(vnode) {\r\n  let i = vnode.data\r\n  if ((i = i.hook) && (i = i.init)) {\r\n    i(vnode)    // 把虚拟节点传递给data.hook.init函数作为参数\r\n  }\r\n  if (vnode.componentInstance) {\r\n    return true\r\n  }\r\n}\r\n\r\n\r\nexport function createElm(vnode) {\r\n  let { tag, children, key, data, text } = vnode;\r\n  if (typeof tag == 'string') { // 创建元素 放到vnode.el上\r\n    // 判断组件的情况, 根据虚拟节点判断是否为组件以及把vnode生成真实的dom挂载到$el\r\n    if (createComponent(vnode)) {\r\n      return vnode.componentInstance.$el\r\n    }\r\n\r\n    // 创建DOM\r\n    vnode.el = document.createElement(tag);\r\n    // 更新属性\r\n    updateProperties(vnode)\r\n\r\n    children.forEach(child => { // 遍历儿子 将儿子渲染后的结果扔到父亲中\r\n      vnode.el.appendChild(createElm(child));\r\n    })\r\n  } else { // 创建文件 放到vnode.el上\r\n    vnode.el = document.createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n\r\n// 根据虚拟节点的data属性, 更新DOM的attrs\r\nfunction updateProperties(vnode, oldProps = {}) {\r\n  let el = vnode.el\r\n  let newProps = vnode.data || {}\r\n  // 老的有，新的没有 -> 删除\r\n  for (let key in oldProps) {  // oldProps: {id: 'a', name: 'input'}\r\n    if (!newProps[key]) {     // newProps: {xx: 'yy'}\r\n      el.removeAttribute(key)  // 当前的el就是复用后的el\r\n    }\r\n  }\r\n\r\n  // 剩下的就是属性在 老的和新的都有, 或者新的有\r\n  // 因为样式的写法是对象方式,单独处理\r\n  let newStyle = newProps.style || {}\r\n  let oldStyle = oldProps.style || {}\r\n  for (let key in oldStyle) {\r\n    if (!newStyle[key]) {\r\n      el.style[key] = ''\r\n    }\r\n  }\r\n\r\n  // 1. 新的有，老的有；替换\r\n  // 2. 新的有，老的没有；新增设置\r\n  for (let key in newProps) {\r\n    if (key === 'style') {\r\n      // style属性是个对象\r\n      for (let styleName in newProps.style) {\r\n        el.style[styleName] = newProps.style[styleName]\r\n      }\r\n    } else if (key === 'class') {\r\n      el.className = newProps.class\r\n    } else {\r\n      // 新的有，老的没有，直接增加\r\n      el.setAttribute(key, newProps[key])\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 初渲染属性(创建)\r\n/* function updateProperties(vnode) {\r\n  let el = vnode.el\r\n  let newProps = vnode.data || {}\r\n  for (let key in newProps) {\r\n    if (key === 'style') {\r\n      // style属性是个对象\r\n      for (let styleName in newProps.style) {\r\n        el.style[styleName] = newProps.style[styleName]\r\n      }\r\n    } else if (key === 'class') {\r\n      el.className = el.class\r\n    } else {\r\n      el.setAttribute(key, newProps[key])\r\n    }\r\n  }\r\n} */","// 生命周期也是一个插件, 需要在Vue实例的原型上挂载更新与render方法\r\n\r\nimport { patch } from \"./vdom/patch\"\r\nimport Watcher from \"./observer/watcher\"\r\n\r\nexport function mountComponent(vm, el) {\r\n  callHook(vm, 'beforeMount')\r\n  // 1. 生成虚拟DOM => vm._render() 2. 渲染真实节点vm._update\r\n  // 都是vm实例上的方法, render和update都是组件生命周期的一部分, 抽离成一个lifecycle文件转换处理生命周期, 理念上与初始化平级别 init - lifecycle\r\n  // vm._update(vm._render())\r\n  const updateComponent = () => {\r\n    vm._update(vm._render())\r\n  }\r\n  const updateCallback = () => { }\r\n  const isRenderWatcher = true\r\n\r\n  let watcher = new Watcher(vm, updateComponent, updateCallback, isRenderWatcher)\r\n\r\n  callHook(vm, 'mounted')\r\n}\r\n\r\nexport function lifecycleMixin(Vue) {\r\n  // 渲染页面\r\n  Vue.prototype._update = function (vnode) {\r\n    const vm = this\r\n    const preVnode = vm._vnode\r\n    if (!preVnode) {\r\n      vm.$el = patch(vm.$el, vnode) // 新的vdom, 生成新的DOM, 替换掉老的DOM vm.$el, 然后返回这个新的DOM, 赋值给实例属性上 vm.$el\r\n\r\n    } else {\r\n      vm.$el = patch(preVnode, vnode)\r\n    }\r\n    vm._vnode = vnode\r\n  }\r\n  // 生成虚拟DOM\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n    let render = vm.$options.render\r\n    // 调用vm.$options.render方法, new Function(`with(this) { return ${code}}`)\r\n    // 因为render方法的字符串表示中有类似 _c, _v这种函数调用, 作用域(通过with)指向了this, call(vm), 那么this就是vm. 实例上的方法, 原型方法, \r\n    let vdom = render.call(vm)\r\n    // console.log(\"vdom,\", vdom)\r\n    return vdom\r\n  }\r\n}\r\n\r\nexport function callHook(vm, hook) {\r\n  const handlers = vm.$options[hook]    // vm.$options[hook] = vm.$options.created = [a,b,created,...]\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      handlers[i].call(vm)\r\n    }\r\n  }\r\n}","import { initState } from \"./state\"\r\nimport { compileToFunctions } from \"./compiler/index.js\"\r\nimport { mountComponent, callHook } from './lifecycle'\r\nimport { mergeOptions } from \"./utils\"\r\n\r\n// 初始化\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    // 选项挂载到vue实例上\r\n    const vm = this\r\n    console.log(\"-------------\", vm.constructor.options, options)\r\n    vm.$options = mergeOptions(vm.constructor.options, options)\r\n    // console.log(vm.$options)\r\n\r\n    callHook(vm, 'beforeCreate')\r\n    // 初始化中一个个不同的功能\r\n    // 1. 数据的初始化: 初始化状态, 数据响应式, 数据变更, 视图更新, 数据劫持\r\n    initState(vm)\r\n\r\n    callHook(vm, 'created')\r\n    // 2. 初始化事件\r\n    // 3. 数据渲染到页面\r\n    // 如果有el属性, 说明需要渲染页面\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    el = document.querySelector(el)\r\n    vm.$el = el\r\n    const options = vm.$options\r\n    if (!options.render) {\r\n      let template = options.template\r\n      if (!template && el) {\r\n        template = el.outerHTML\r\n      }\r\n      // 将模板编译成render函数\r\n      const render = compileToFunctions(template)\r\n      options.render = render\r\n    }\r\n    // 挂载组件 属于生命周期的一部分 (创建VDOM和渲染真实节点的开始 vm上有render, el是被替换的DOM节点)\r\n    // debugger\r\n    mountComponent(vm, el)\r\n  }\r\n}","import { isReservedTag } from \"../utils\";\r\n\r\nexport function renderMixin(Vue) {\r\n  // 生成虚拟DOM\r\n  // _c(div, {id:\"app\",style:{\"color\":\"red\"}} ,_c(p, undefined ,_v(\"hello world zf\"+_s(school.name))))\r\n  Vue.prototype._c = function () {  // 创建虚拟dom元素\r\n    return createElement(this, ...arguments)\r\n  }\r\n\r\n  // 创建虚拟dom文本元素\r\n  Vue.prototype._v = function (text) {\r\n    return createTextVnode(text);\r\n  }\r\n  // stringify\r\n  Vue.prototype._s = function (val) {\r\n    // console.log('_s: val', val, typeof val)\r\n    return val === null ? '' : typeof val === 'object' ? JSON.stringify(val) : val\r\n  }\r\n}\r\n\r\n// 其实还是根据ast对象树 生成vdom\r\nfunction createElement(vm, tag, data = {}, ...children) {\r\n\r\n  if (isReservedTag(tag)) {\r\n    return vnode(tag, data, data.key, children)\r\n  } else {\r\n    // 创建组件的虚拟节点\r\n    // 1. 先拿到组件的构造函数\r\n    let Ctor = vm.$options.components[tag]\r\n    console.log(\"Ctor: \", Ctor)\r\n    // 创建组件的虚拟节点\r\n    return createComponent(vm, tag, data, data.key, children, Ctor)\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction createComponent(vm, tag, data, key, children, Ctor) {\r\n  debugger\r\n  const baseCtor = vm.$options._base;\r\n  if (typeof Ctor == 'object') {\r\n    Ctor = baseCtor.extend(Ctor)\r\n\r\n  }\r\n  // 给组件增加生命周期  组件初始化，更新\r\n  data.hook = {\r\n    init(vnode) {\r\n      let child = vnode.componentInstance = new Ctor({})\r\n\r\n      // child.$mount()// 挂载逻辑 组件的$mount方法中是不传递参数的 \r\n      // vnode.componentInstance.$el 指代的是当前组件的真实dom\r\n    }\r\n  }\r\n  // Ctor.cid是子类的 组件的children就是插槽slot, text为空, 给组件传入一个特殊的对象 { Ctor, children }\r\n  return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, undefined, { Ctor, children })\r\n}\r\n\r\n\r\nfunction createTextVnode(text) {\r\n  return vnode(undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// 用来产生虚拟dom的\r\nfunction vnode(tag, data, key, children, text, componentOptions) {\r\n  return {\r\n    tag, data, key, children, text, componentOptions // 组件的虚拟节点他多了一个componentOptions属性 用来保存当前组件的构造函数和他的插槽\r\n  }\r\n}","import { mergeOptions } from \"../utils\"\r\n\r\nexport default function initExtend(Vue) {\r\n  let cid = 0;\r\n  // extendOptions: 用户自定义的组件options: template, data,...\r\n  Vue.extend = function (extendOptions) {\r\n    const Super = this\r\n    // 根据配置选项, 生成一个子类的构造函数\r\n    const Sub = function VueComponent(options) {\r\n      console.log(\"in Sub this:\", this)\r\n      this._init(options)\r\n    }\r\n    Sub.cid = cid++;\r\n    console.log(\"Super.options: \", Super.options)\r\n    Sub.prototype = Object.create(Super.prototype)\r\n    Sub.prototype.constructor = Sub\r\n    Sub.options = mergeOptions(\r\n      Super.options,\r\n      extendOptions\r\n    )\r\n    console.log(\"Sub.options: \", Sub.options)\r\n    Sub.components = Super.components\r\n    return Sub\r\n  }\r\n}","import { mergeOptions } from \"../utils\"\r\nimport initExtend from \"./extend\"\r\n\r\nexport function initGlobalApi(Vue) {\r\n  Vue.options = {}\r\n  Vue.mixin = function (mixin) {\r\n    // debugger\r\n    this.options = mergeOptions(this.options, mixin)\r\n  }\r\n\r\n\r\n  // 1. 全局注册组件, 全局属性都挂载到Vue.options上\r\n  // 2. 递归组件一定要加名字\r\n\r\n  Vue.options.components = {} // 全局组件的配置记录在全局的options.components中\r\n  Vue.options._base = Vue  // 最终的Vue的构造函数 保留在options对象中的_base\r\n\r\n  // 初始化Vue.extend, 插件\r\n  initExtend(Vue)\r\n\r\n  /**\r\n   * \r\n   * @param {*} id 定义组件的名字\r\n   * @param {*} definition 组件的配置选项, 对象 {name: 'xxx', template: xx, data() {}, ...}\r\n   */\r\n  Vue.component = function (id, definition) {\r\n    definition.name = definition.name || id\r\n    definition = this.options._base.extend(definition) // 根据当前组件配置对象, 生成了一个子类的构造函数\r\n    // Vue.component 注册组件 等价于  Vue.options.components[id] = definition\r\n    Vue.options.components[id] = definition\r\n  }\r\n\r\n\r\n\r\n}","import { initMixin } from \"./init\"\r\nimport { lifecycleMixin } from \"./lifecycle\"\r\nimport { renderMixin } from \"./vdom/index\"\r\nimport { initGlobalApi } from \"./global-api/index\"\r\nimport { stateMixin } from \"./state\"\r\n\r\n\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\n\r\n// 扩展原型\r\n// 初始化方法\r\ninitMixin(Vue)\r\nlifecycleMixin(Vue)\r\nrenderMixin(Vue)\r\nstateMixin(Vue)\r\n// 扩展Vue静态方法\r\ninitGlobalApi(Vue)\r\n\r\nexport default Vue\r\n\r\n\r\n\r\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","arguments","inserted","ob","__ob__","slice","observeArray","dep","notify","proxy","vm","data","key","defineProperty","get","set","newValue","definePropertyWithoutEnumerable","target","value","enumerable","configurable","LIFECYCLE_HOOKS","strategy","components","parentVal","childVal","res","mergeHook","concat","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","callbacks","pending","timerFunc","flushCallbacks","length","cb","shift","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","push","makeMap","str","mapping","list","split","i","isReservedTag","id","Dep","subs","addDep","watcher","update","stack","pushTarget","popTarget","pop","console","log","Observer","isArray","__proto__","walk","item","keys","defineReactive","childDep","depend","Watcher","exprOrFn","updateCallback","user","lazy","dirty","deps","depsId","Set","getter","obj","path","has","add","addSub","call","queueWatcher","oldValue","queue","flushSchedulerQueue","run","initState","opts","$options","props","initData","watch","initWatch","computed","initComputed","_data","watches","handler","handle","createWatcher","$watch","watchers","_computedWatchers","userDef","defineComputed","sharedComputedProperty","createComputedGetter","evaluate","stateMixin","Vue","$nextTick","immediate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","parseStartTag","start","match","tagName","attrs","advance","end","attr","name","n","substring","root","currentParent","element","createASTElement","chars","text","trim","children","type","ele","tag","textEnd","indexOf","startTagMatch","endTagMatch","defaultTagRE","genProps","_item","JSON","stringify","gen","node","generate","test","tokens","lastIndex","index","exec","join","genChildren","ast","map","code","compileToFunctions","template","render","Function","patch","oldVNode","vnode","createElm","nodeType","el","parentElement","parentNode","insertBefore","nextSibling","removeChild","replaceChild","updateProperties","oldChildren","newChildren","updateChildren","innerHTML","appendChild","isSameVNode","oldVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","findIndex","undefined","findVNode","createComponent","init","componentInstance","$el","createElement","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","setAttribute","mountComponent","callHook","updateComponent","_update","_render","isRenderWatcher","lifecycleMixin","preVnode","_vnode","vdom","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","_v","createTextVnode","_s","val","Ctor","baseCtor","_base","extend","cid","componentOptions","initExtend","extendOptions","Super","Sub","VueComponent","initGlobalApi","mixin","component","definition"],"mappings":"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"}